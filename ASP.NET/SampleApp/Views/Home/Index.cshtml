@using SampleApp.Models

<h2 class="content-block">Home</h2>

@(Html.DevExtreme().DataGrid()
    .DataSource(new JS("dataSource"))
    .Editing(e => e
        .AllowUpdating(true)
        .AllowAdding(true)
        .AllowDeleting(true)
        .UseIcons(true)
        .Mode(GridEditMode.Popup)
    )
    .OnToolbarPreparing("onToolbarPreparing")
    .Columns(columns => {
        columns.Add().DataField("ID");
        columns.Add().DataField("CompanyName");
        columns.Add().DataField("Zipcode");
        columns.Add().DataField("Website");
        columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .Buttons(btn =>
            {
                btn.Add()
                    .Name("edit")
                    .OnClick("onClickEdit");

                btn.Add().Name("delete");
            });
    })
    .OnInitialized("onDataGridInitialized")
)
@(Html.DevExtreme().Popup()
    .ID("popup")
    .ContentTemplate(new TemplateName("customPopupContentTemplate"))
    .ToolbarItems(items =>
    {
        items.Add()
            .Widget(editor => editor.Button()
                .Text("Confirm")
                .Type(ButtonType.Success)
                .OnClick("onConfirmClick")
            )
            .Location(ToolbarItemLocation.After)
            .Toolbar(Toolbar.Bottom);
        items.Add()
            .Widget(editor => editor.Button()
                .Text("Cancel")
                .Type(ButtonType.Success)
                .OnClick("onCancelClick")
            )
            .Location(ToolbarItemLocation.After)
            .Toolbar(Toolbar.Bottom);
    })
    .OnInitialized("onPopupInitialized")
)

@using (Html.DevExtreme().NamedTemplate("customPopupContentTemplate"))
{
    @(Html.DevExtreme().Form()
        .LabelLocation(FormLabelLocation.Top)
        .ShowColonAfterLabel(true)
        .FormData(new JS("rowData"))
        .ColCountByScreen(c => c
            .Lg(2)
            .Md(2)
            .Sm(1)
            .Xs(1)
        )
        .Items(items =>
        {
            items.AddSimple()
                .DataField("ID")
                .ValidationRules(v => v.AddRequired());

            items.AddSimple()
                .DataField("CompanyName")
                .ValidationRules(v => v.AddRequired());

            items.AddSimple()
                .DataField("Zipcode")
                .ValidationRules(v => v.AddRequired());

            items.AddSimple()
                .DataField("Website")
                .ValidationRules(v => v.AddRequired());
        })
        .OnInitialized("onFormInitialized")
    )
}

<script>
   
    const source = [{
        "ID": 1,
        "CompanyName": "Super Mart of the West",
        "Zipcode": 72716,
        "Website": "http://www.nowebsitesupermart.com"
    }, {
        "ID": 2,
        "CompanyName": "Electronics Depot",
        "Zipcode": 30339,
        "Website": "http://www.nowebsitedepot.com"
    }, {
        "ID": 3,
        "CompanyName": "K&S Music",
        "Zipcode": 55403,
        "Website": "http://www.nowebsitemusic.com"
    }];
    const key = "ID";
    const dataSource =   new DevExpress.data.DataSource({
                store: {
                    type: "array",
                    data: source,
                    key,
                    onPush:  function() {
                        grid.getDataSource().reload()
                    }
                }})

    
    let rowData = {},
        mode;
    let popup, grid, form;

    function onDataGridInitialized(e) {
        grid = e.component;
    }

    function onPopupInitialized(e) {
        popup = e.component;
    }

    function onFormInitialized(e) {
        form = e.component;
    }

    function onToolbarPreparing(e) {
        let toolbarItems = e.toolbarOptions.items;

        // customize addRow toolbar button
        for (let i = 0; i < toolbarItems.length; i++) {
            let item = toolbarItems[i];
            if (item.name === "addRowButton") {
                item.options.onClick = onClickAdd;
                break;
            }
        }
    }

    function onClickEdit(e) {
        showPopup("Edit", e.row.data)
    }

    function onClickAdd(e) {
        showPopup("Add", {})
    }

    function onConfirmClick() {
        let result = form.validate();
        if (result.isValid) {
            let data = form.option("formData"),
                gridSource = grid.getDataSource(),
                gridStore = gridSource.store();

            if (mode === "Add")
                gridStore.push([{ type: "insert", data: data }]);
            else if (mode === "Edit")
                gridStore.push([{ type: "update", data: data, key: data[key] }]);


            popup.hide();
        }
    }

    function onCancelClick() {
        popup.hide();
    }

    function showPopup(popupMode, data) {
        mode = popupMode;

        if (form)
            form.option('formData', { ...data })
        else
            rowData = { ...data };

        popup.option({
            title: popupMode,
            visible: true
        })
    }
</script>